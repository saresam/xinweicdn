if(typeof FormData=="undefined"||!FormData.prototype.keys){const n=typeof window=="object"?window:typeof self=="object"?self:this,c=n.FormData,f=n.XMLHttpRequest&&n.XMLHttpRequest.prototype.send,l=n.Request&&n.fetch,t=n.Symbol&&Symbol.toStringTag,s=new WeakMap,i=n=>s.get(n),a=Array.from||(n=>[].slice.call(n));t&&(Blob.prototype[t]||(Blob.prototype[t]="Blob"),"File"in n&&!File.prototype[t]&&(File.prototype[t]="File"));try{new File([],"")}catch(a){n.File=function(n,i,r){const u=new Blob(n,r),f=r&&void 0!==r.lastModified?new Date(r.lastModified):new Date;return Object.defineProperties(u,{name:{value:i},lastModifiedDate:{value:f},lastModified:{value:+f},toString:{value(){return"[object File]"}}}),t&&Object.defineProperty(u,t,{value:"File"}),u}}function e([t,n]){return t instanceof Blob&&(t=new File([t],n,{type:t.type,lastModified:t.lastModified})),t}function u(n){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");return[n+""]}function h(n,t,i){if(arguments.length<2)throw new TypeError(`2 arguments required, but only ${arguments.length} present.`);return t instanceof Blob?[n+"",t,i!==undefined?i+"":typeof t.name=="string"?t.name:"blob"]:[n+"",t+""]}function o(n,t){for(let i=0;i<n.length;i++)t(n[i])}class r{constructor(n){if(s.set(this,Object.create(null)),!n)return this;const t=this;o(n.elements,n=>{n.name&&!n.disabled&&n.type!=="submit"&&n.type!=="button"&&(n.type==="file"?o(n.files||[],i=>{t.append(n.name,i)}):n.type==="select-multiple"||n.type==="select-one"?o(n.options,i=>{!i.disabled&&i.selected&&t.append(n.name,i.value)}):n.type==="checkbox"||n.type==="radio"?n.checked&&t.append(n.name,n.value):t.append(n.name,n.value))})}append(n,t,r){const u=i(this);u[n]||(u[n]=[]);u[n].push([t,r])}delete(n){delete i(this)[n]}*entries(){const n=i(this);for(let t in n)for(let n of n[t])yield[t,e(n)]}forEach(n,t){for(let[i,r]of this)n.call(t,r,i,this)}get(n){const t=i(this);return t[n]?e(t[n][0]):null}getAll(n){return(i(this)[n]||[]).map(e)}has(n){return n in i(this)}*keys(){for(let[n]of this)yield n}set(n,t,r){i(this)[n]=[[t,r]]}*values(){for(let[,n]of this)yield n}['_asNative'](){const n=new c;for(let[t,i]of this)n.append(t,i);return n}['_blob'](){const t="----formdata-polyfill-"+Math.random(),n=[];for(let[r,i]of this)n.push(`--${t}
`),i instanceof Blob?n.push(`Content-Disposition: form-data; name="${r}"; filename="${i.name}"
`,`Content-Type: ${i.type||"application/octet-stream"}

`,i,"\r\n"):n.push(`Content-Disposition: form-data; name="${r}"

${i}
`);return n.push(`--${t}--`),new Blob(n,{type:"multipart/form-data; boundary="+t})}[Symbol.iterator](){return this.entries()}toString(){return"[object FormData]"}}t&&(r.prototype[t]="FormData");const v=[["append",h],["delete",u],["get",u],["getAll",u],["has",u],["set",h]];if(v.forEach(n=>{const t=r.prototype[n[0]];r.prototype[n[0]]=function(){return t.apply(this,n[1].apply(this,a(arguments)))}}),f&&(XMLHttpRequest.prototype.send=function(n){if(n instanceof r){const t=n._blob();this.setRequestHeader("Content-Type",t.type);f.call(this,t)}else f.call(this,n)}),l){const t=n.fetch;n.fetch=function(n,i){return i&&i.body&&i.body instanceof r&&(i.body=i.body._blob()),t(n,i)}}n.FormData=r}